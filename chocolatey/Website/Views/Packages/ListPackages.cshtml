@model PackageListViewModel
@{
    ViewBag.Title = string.IsNullOrWhiteSpace(Model.SearchTerm) ? "Packages" : "Packages matching " + Model.SearchTerm;
    ViewBag.Tab = "Packages";
    var moderationQueue = !string.IsNullOrWhiteSpace(Model.ModeratorQueue) && Model.ModeratorQueue.Equals(bool.TrueString, StringComparison.InvariantCultureIgnoreCase);
    var moderationCount = Model.ModerationUpdatedPackageCount+ Model.ModerationSubmittedPackageCount + Model.ModerationWaitingPackageCount;
    var unreviewedCount = Model.TotalCount - moderationCount;
}


<div class="hgroup search">
    <div style="float:right">
        <a href="http://feeds.feedburner.com/chocolatey" title="Subscribe to package updates" rel="alternate" type="application/rss+xml"><img src="https://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="RSS" style="border:0"/>&nbsp;<span>Subscribe to updates</span></a>
        <br />
        <form style="border:0px solid #ccc;padding:1px;text-align:center;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open('https://feedburner.google.com/fb/a/mailverify?uri=chocolatey', 'popupwindow', 'scrollbars=yes,width=550,height=520');return true"><input type="hidden" value="chocolatey" name="uri"/><input type="hidden" name="loc" value="en_US"/>Or subcribe by <input type="submit" value="email" /></form>
    </div>
    @if (!String.IsNullOrEmpty(Model.SearchTerm)) {
        <h1>Search for "@Model.SearchTerm" returned @Model.TotalCount @if (Model.TotalCount == 1) { <text>package</text> } else { <text>packages</text> }</h1>
    }
    else {
        if (moderationQueue)
        {
            <h1>@if (Model.TotalCount == 1) { <text>There is @moderationCount package in moderation</text> } else { <text>There are @moderationCount packages in moderation</text> }</h1>
            <h2>@Model.ModerationUpdatedPackageCount Updated | @Model.ModerationSubmittedPackageCount Submitted | @Model.ModerationWaitingPackageCount Waiting for Maintainer | @unreviewedCount Unreviewed</h2>
        }
        else
        {
            <h1>@if (Model.TotalCount == 1) { <text>There is @Model.TotalCount package</text> } else { <text>There are @Model.TotalCount packages</text> }</h1>
        }
        
    }
    @if (@Model.LastResultIndex > 0)
    {
    <h2>Displaying results @Model.FirstResultIndex - @Model.LastResultIndex.</h2>
    }
</div>

<form method="get" action="">
    <fieldset class="form search">
        <legend>Sort Order</legend>
        <input type="hidden" name="q" value="@Model.SearchTerm" />

        <div class="form-field">
            @if (User.IsInRole(Constants.AdminRoleName))
            {
                <select name="moderatorQueue" id="moderatorQueue">
                    @ViewHelpers.Option("", "Normal View", Model.ModeratorQueue)
                    @ViewHelpers.Option("true", "Moderator Queue", Model.ModeratorQueue)
                </select>
            }
            
            <select name="prerelease" id="prerelease">
                @ViewHelpers.Option("", "Stable Only", Model.IncludePrerelease)
                @ViewHelpers.Option("true", "Include Prerelease", Model.IncludePrerelease)
            </select>
            
            <label for="sortOrder">Sort By</label>
            <select name="sortOrder" id="sortOrder">
                @if (!Model.SearchTerm.IsEmpty()) {
                    @ViewHelpers.Option(Constants.RelevanceSortOrder, "Relevance", Model.SortOrder)
                }
                @ViewHelpers.Option(Constants.PopularitySortOrder, "Popularity", Model.SortOrder)
                @ViewHelpers.Option(Constants.AlphabeticSortOrder, "A-Z", Model.SortOrder)
                @ViewHelpers.Option(Constants.RecentSortOrder, "Recent", Model.SortOrder)
            </select>
        </div>
    </fieldset>
</form>

<ol id="searchResults">
    @foreach (var package in Model.Items) {
    <li>
        @Html.Partial(MVC.Packages.Views._ListPackage, package)
    </li>
    }
</ol>


@ViewHelpers.PreviousNextPager(Model.Pager)

@section BottomScripts {
    <script>
        $(function () {
            $("#sortOrder,#prerelease,#moderatorQueue").change(function () {
                $(this).closest("form").submit();
            });
        });
    </script>
}

